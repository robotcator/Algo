#include <stdio.h>
#include <iostream>
#include <string.h>
#include <vector>

using namespace std;

int graph[105][105];
const int inf = 0x3f3f3f3f;

void Floyd(int n)
{
	for(int k = 0; k < n; k ++)
		for(int i = 0; i < n; i ++)
			for(int j = 0; j < n; j ++)
			{
				if(graph[i][j] > graph[i][k] + graph[k][j])
					graph[i][j] = graph[i][k] + graph[k][j];
			}
}

int main()
{
	int n, m;
	int i, j;
	while(scanf("%d%d", &n, &m) != EOF){
		memset(graph, inf, sizeof(graph));
		for(i = 0; i < n; i ++) graph[i][i] = 0;

		//注意上面去的是两者最小值，所以初值都是无穷大,对角线的值初始为0或者inf
		/*
		1. 对角线全都是inf的输出
		8 7
		0 1
		1 2
		2 3
		3 4
		4 5
		5 6
		6 7
		1061109567 1 1061109567 1061109567 1061109567 1061109567 1061109567 1061109567
		1 1061109567 1 1061109567 1061109567 1061109567 1061109567 1061109567
		1061109567 1 1061109567 1 1061109567 1061109567 1061109567 1061109567
		1061109567 1061109567 1 1061109567 1 1061109567 1061109567 1061109567
		1061109567 1061109567 1061109567 1 1061109567 1 1061109567 1061109567
		1061109567 1061109567 1061109567 1061109567 1 1061109567 1 1061109567
		1061109567 1061109567 1061109567 1061109567 1061109567 1 1061109567 1
		1061109567 1061109567 1061109567 1061109567 1061109567 1061109567 1 1061109567
		2 1 2 3 4 5 6 7
		1 2 1 2 3 4 5 6
		2 1 2 1 2 3 4 5
		3 2 1 2 1 2 3 4
		4 3 2 1 2 1 2 3
		5 4 3 2 1 2 1 2
		6 5 4 3 2 1 2 1
		7 6 5 4 3 2 1 2
		Yes
		2. 对角线全都是0,其余为inf的输出
		8 7
		0 1
		1 2
		2 3
		3 4
		4 5
		5 6
		6 7
		0 1 1061109567 1061109567 1061109567 1061109567 1061109567 1061109567
		1 0 1 1061109567 1061109567 1061109567 1061109567 1061109567
		1061109567 1 0 1 1061109567 1061109567 1061109567 1061109567
		1061109567 1061109567 1 0 1 1061109567 1061109567 1061109567
		1061109567 1061109567 1061109567 1 0 1 1061109567 1061109567
		1061109567 1061109567 1061109567 1061109567 1 0 1 1061109567
		1061109567 1061109567 1061109567 1061109567 1061109567 1 0 1
		1061109567 1061109567 1061109567 1061109567 1061109567 1061109567 1 0
		0 1 2 3 4 5 6 7
		1 0 1 2 3 4 5 6
		2 1 0 1 2 3 4 5
		3 2 1 0 1 2 3 4
		4 3 2 1 0 1 2 3
		5 4 3 2 1 0 1 2
		6 5 4 3 2 1 0 1
		7 6 5 4 3 2 1 0
		Yes
		*/
		int x, y;
		for(i = 0; i < m; i ++){
			scanf("%d%d", &x, &y);
			graph[x][y] = graph[y][x] = 1;
			// undirected graph
		}
		
		for(i = 0; i < n; i ++){
			for(j = 0; j < n; j ++)
			printf("%d ", graph[i][j]);
			printf("\n");
		}
		
		Floyd(n);
		int flag = 0;
		for(i = 0; i < n; i ++){
			for(j = 0; j < n; j ++){
				if(graph[i][j] > 7)	flag = 1;
				printf("%d ", graph[i][j]);
			}
			printf("\n");
		}
		if(flag == 1) printf("No\n");
		else printf("Yes\n");
	}
	return 0;
}
// 不要老是写错循环变量